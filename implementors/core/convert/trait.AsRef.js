(function() {var implementors = {};
implementors["polyfuse"] = [{"text":"impl&lt;'_&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"struct\" href=\"polyfuse/struct.Forget.html\" title=\"struct polyfuse::Forget\">Forget</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"enum\" href=\"polyfuse/op/enum.Forgets.html\" title=\"enum polyfuse::op::Forgets\">Forgets</a>&lt;'_&gt;","synthetic":false,"types":["polyfuse::op::Forgets"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyAttr.html\" title=\"struct polyfuse::reply::ReplyAttr\">ReplyAttr</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyAttr.html\" title=\"struct polyfuse::reply::ReplyAttr\">ReplyAttr</a>","synthetic":false,"types":["polyfuse::reply::ReplyAttr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyEntry.html\" title=\"struct polyfuse::reply::ReplyEntry\">ReplyEntry</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyEntry.html\" title=\"struct polyfuse::reply::ReplyEntry\">ReplyEntry</a>","synthetic":false,"types":["polyfuse::reply::ReplyEntry"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyOpen.html\" title=\"struct polyfuse::reply::ReplyOpen\">ReplyOpen</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyOpen.html\" title=\"struct polyfuse::reply::ReplyOpen\">ReplyOpen</a>","synthetic":false,"types":["polyfuse::reply::ReplyOpen"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyWrite.html\" title=\"struct polyfuse::reply::ReplyWrite\">ReplyWrite</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyWrite.html\" title=\"struct polyfuse::reply::ReplyWrite\">ReplyWrite</a>","synthetic":false,"types":["polyfuse::reply::ReplyWrite"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyXattr.html\" title=\"struct polyfuse::reply::ReplyXattr\">ReplyXattr</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyXattr.html\" title=\"struct polyfuse::reply::ReplyXattr\">ReplyXattr</a>","synthetic":false,"types":["polyfuse::reply::ReplyXattr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyStatfs.html\" title=\"struct polyfuse::reply::ReplyStatfs\">ReplyStatfs</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyStatfs.html\" title=\"struct polyfuse::reply::ReplyStatfs\">ReplyStatfs</a>","synthetic":false,"types":["polyfuse::reply::ReplyStatfs"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyLk.html\" title=\"struct polyfuse::reply::ReplyLk\">ReplyLk</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyLk.html\" title=\"struct polyfuse::reply::ReplyLk\">ReplyLk</a>","synthetic":false,"types":["polyfuse::reply::ReplyLk"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyBmap.html\" title=\"struct polyfuse::reply::ReplyBmap\">ReplyBmap</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyBmap.html\" title=\"struct polyfuse::reply::ReplyBmap\">ReplyBmap</a>","synthetic":false,"types":["polyfuse::reply::ReplyBmap"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"polyfuse/reply/struct.ReplyPoll.html\" title=\"struct polyfuse::reply::ReplyPoll\">ReplyPoll</a>&gt; for <a class=\"struct\" href=\"polyfuse/reply/struct.ReplyPoll.html\" title=\"struct polyfuse::reply::ReplyPoll\">ReplyPoll</a>","synthetic":false,"types":["polyfuse::reply::ReplyPoll"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"polyfuse/struct.DirEntry.html\" title=\"struct polyfuse::DirEntry\">DirEntry</a>","synthetic":false,"types":["polyfuse::dirent::DirEntry"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()